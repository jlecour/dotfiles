#!/bin/bash

USAGE="[-d|--define] identity name email"
USAGE="$USAGE | [-r|--remove] identity"
USAGE="$USAGE | [-l|--list]"
USAGE="$USAGE | <identity>"

. $(git --exec-path)/git-sh-setup

lookup () {
  local identity=$1
  local key=$2

  git config -z identity.$identity.$key
}

format_identity () {
  local identity=$1

  echo "[$identity] $(lookup "$identity" name) <$(lookup "$identity" email)>"
}

use_identity () {
  local identity=$1
  local name="$(lookup $identity name)"
  local email="$(lookup $identity email)"

  echo "Using identity: $(format_identity "$identity")"
  git config user.identity "$identity"
  git config user.name "$name"
  git config user.email "$email"
}

list_identities () {
  local identities="$(git config --get-regexp ^identity\. | cut -d. -f2 | sort -u)"

  echo "Available identities:"
  for identity in $identities; do
    format_identity "$identity"
  done
}

print_current_identity () {
  local identity="$(git config user.identity)"

  echo "Current identity: $(format_identity "$identity")"
}

define_identity () {
  local identity="$1"
  local name="$2"
  local email="$3"

  git config --global identity."$identity".name "$name"
  git config --global identity."$identity".email "$email"
  echo "Created $(format_identity "$identity")"
}

remove_identity () {
  local identity="$1"

  git config --global --remove-section identity."$identity"
  echo "Removed $(format_identity "$identity")"
}

IDENTITY="$1"

check_arguments () {
  if [ $1 -lt $2 ]; then
    usage
    exit 1
  fi
}

case $IDENTITY in
  "") print_current_identity ;;

  -l|--list) list_identities ;;

  -d|--define)
    shift
    check_arguments $# 3
    define_identity $@
    ;;

  -r|--remove)
    shift
    check_arguments $# 1
    remove_identity $@
    ;;

  *) use_identity $IDENTITY ;;
esac
